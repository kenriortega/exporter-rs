name: Build and Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Build Windows Binary
        if: matrix.os == 'windows-latest'
        run: cargo build --release --target x86_64-pc-windows-gnu
      - name: Build Linux Binary
        if: matrix.os == 'ubuntu-latest'
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Build ARM64 Binary
        if: matrix.arch == 'arm64'
        run: cargo build --release --target aarch64-unknown-linux-gnu
      - name: Package Binaries
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x64'
        run: |
          mkdir -p dist
          tar -czvf dist/exporter-rs-linux-amd64.tar.gz target/x86_64-unknown-linux-gnu/release/exporter-rs
        env:
          RELEASE_TAG: ${{ github.ref }}
      - name: Upload Binaries
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x64'
        uses: actions/upload-artifact@v2
        with:
          name: exporter-rs
          path: dist/exporter-rs-linux-amd64.tar.gz